name: Create Release Artifacts

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      tag:
        required: true
        type: string
    secrets:
      registry:
        required: true
      user:
        required: true
      password:
        required: true
      token:
        required: true
        
jobs:
  release-assets-matrix:
    name: Release Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ linux ]
        architecture:
          - amd64
          - arm64
          - ppc64le
          - s390x
    steps:
    - name: Docker Login
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
      with:
        registry: ${{ secrets.registry }}
        username: ${{ secrets.user }}
        password: ${{ secrets.password }}

    - name: Extract executable
      uses: shrink/actions-docker-extract@04c17c51a5b9fd93b7aed2e05e86c8fe2d90ee52 # v3.1.0
      id: extract
      with:
        image: ${{ secrets.registry }}/${{ inputs.name }}:${{ inputs.tag }}-${{ matrix.platform }}-${{ matrix.architecture }}
        path: /usr/local/bin/preflight

    - name: Rename and upload the binary
      run: |
        mv --verbose "${outputs_dir}/preflight" "${outputs_dir}/preflight-${platform}-${architecture}"
        gh release upload --repo "${GITHUB_REPOSITORY}" "${tag}" "${outputs_dir}/preflight-${platform}-${architecture}"
      env:
        outputs_dir: ${{ steps.extract.outputs.destination }}
        platform: ${{ matrix.platform }}
        architecture: ${{ matrix.architecture }}
        tag: ${{ inputs.tag }}
        GH_TOKEN: ${{ secrets.token }}

  # an ugly workaround to build binaries for mac.  builds locally and pushes to the release.
  add-darwin-bins:
    name: Release binaries for MacOS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set Env Tags
        run: echo "RELEASE_TAG=$(echo "${GITHUB_REF}" | cut -d '/' -f 3)" >> "${GITHUB_ENV}"
  
      - name: Install system deps
        run: 'sudo apt update && sudo apt install -y libgpgme-dev libbtrfs-dev libdevmapper-dev'
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
      - name: Build Multi-arch-mac
        run: make build-multi-arch-mac

      - name: Upload binaries to the release
        run:
          gh release upload --repo "${GITHUB_REPOSITORY}" "${tag}" preflight-darwin-*
        env:
          tag: ${{ inputs.tag }}
          GH_TOKEN: ${{ secrets.token }}
