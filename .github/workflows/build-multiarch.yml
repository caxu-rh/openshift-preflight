name: Build and push a multi-arch manifest

# Usage example:
#    uses: ./.github/workflows/build-multiarch.yml
#    with:
#      name: preflight
#      tag: 89123ab
#    secrets:
#      registry: ${{ secrets.IMAGE_REGISTRY }}
#      user: ${{ secrets.REGISTRY_USER }}
#      password: ${{ secrets.REGISTRY_PASSWORD }}

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      tag:
        required: true
        type: string
      sign:
        type: boolean
        default: false
        required: false
    secrets:
      registry:
        required: true
      user:
        required: true
      password:
        required: true
      token:
        required: false
        description: "The token used for cosign. Typically GITHUB_TOKEN within GitHub Actions."
        
        

jobs:
  create-and-push-multiarch-manifest:
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    name: create and push a multiarch manifest to the repo
    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        if: ${{ inputs.sign == true && github.event.release && github.event.action == 'published' }}
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad #v4.0.0
        with:
          cosign-release: 'v2.2.4'

      # Authenticate to container image registry to push the image
      - name: Podman Login
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1.7
        with:
          registry: ${{ secrets.registry }}
          username: ${{ secrets.user }}
          password: ${{ secrets.password }}

      - name: Create and add to manifest
        run: |
          buildah manifest create "${INPUT_NAME}"
          buildah manifest add "${INPUT_NAME}" "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}-linux-amd64"
          buildah manifest add "${INPUT_NAME}" "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}-linux-ppc64le"
          buildah manifest add "${INPUT_NAME}" "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}-linux-arm64"
          buildah manifest add "${INPUT_NAME}" "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}-linux-s390x"
        env:
          INPUT_NAME: ${{ inputs.name }}
          INPUT_TAG: ${{ inputs.tag }}

      - name: Push manifest
        id: push-manifest
        run: |
            podman manifest push --digestfile imagedigest "${INPUT_NAME}" "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}" --all
            echo "digest=$(cat imagedigest)" | tee -a "${GITHUB_OUTPUT}"
        env:
          INPUT_NAME: ${{ inputs.name }}
          INPUT_TAG: ${{ inputs.tag }}

      - name: Sign the published manifest
        # only sign if release is published, not for ghactions branch push
        # which is used for testing and development.
        if: ${{ inputs.sign == true && github.event.release && github.event.action == 'published' }}
        run: |
          cosign sign --yes --recursive "${{ secrets.registry }}/${INPUT_NAME}@${DIGEST}"
        env:
          DIGEST: ${{ steps.push-manifest.outputs.digest }}
          INPUT_NAME: ${{ inputs.name }}

      - name: Verify the image signature
        if: ${{ inputs.sign == true && github.event.release && github.event.action == 'published' }}
        run: |
          cosign verify \
            --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/build-multiarch.yml@refs/tags/${INPUT_TAG}" \
            --certificate-oidc-issuer https://token.actions.githubusercontent.com \
            "${{ secrets.registry }}/${INPUT_NAME}:${INPUT_TAG}"
        env:
          INPUT_NAME: ${{ inputs.name }}
          INPUT_TAG: ${{ inputs.tag }}
